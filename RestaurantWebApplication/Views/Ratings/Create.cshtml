@using System.Text.Json;
@using System.Net;

@model RestaurantWebApplication.Models.Rating

@{
    ViewData["Title"] = "Create";
}

<h1>Create</h1>

<h4>Rating</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Place" class="control-label"></label>
                <input id="placeName" name="PlaceName" class="form-control" />
            </div>
            <div class="form-group">
                <label asp-for="Client" class="control-label"></label>
                <input id="clientName" name="ClientName" class="form-control" />
            </div>
            <div class="form-group">
                <label asp-for="Score" class="control-label"></label>
                <input asp-for="Score" class="form-control" />
                <span asp-validation-for="Score" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <script>
        let data = @Html.Raw(JsonSerializer.Serialize(ViewData["ClientId"]));
        var names = [];
        data.forEach(client => {
            names.push(client.Name);
        })
        $( function() {
            $( "#clientName" ).autocomplete({
                source: names,
                minLength: 3
            });
        });
    </script>
                <script>
                    let placeData = @Html.Raw(Json.Serialize(ViewData["PlaceId"]));
                    var placeNames = [];
                    placeData.forEach(type => {
                                placeNames.push(type.name);
                        })
                        $( function() {
                            $( "#placeName" ).autocomplete({
                                    source: placeNames,
                                minLength: 3
                            });
                        });
                </script>
}
